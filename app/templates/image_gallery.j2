<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8"/>
    <title>Galerie ‚Äì Seite {{ page }}</title>
    <style>
        body {
            font-family: sans-serif;
            margin: 0;
            background: #f7f7f7;
        }

        /* Grid-Container f√ºr Eintr√§ge */
        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 10px;
            padding: 10px;
            width: 100%;
            row-gap: 2px;
        }

        /* Einzelner Eintrag */
        .eintrag {
            background: white;
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 10px;
            box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
            gap: 10px;
            width: 95%;
        }

        /* Bildbereich */
        .bild-wrapper {
            display: flex;
            justify-content: center;
            align-items: flex-start;
        }

        /* Bild selbst */
        .bild {
            width: 100%;
            max-width: 250px;
            height: auto;
            border-radius: 8px;
            cursor: pointer;
        }

        /* Checkbox-Container */
        .checkbox-container {
            display: flex;
            flex-direction: column;
            gap: 0px;
        }

        /* Checkbox-Labels */
        .checkbox-container label {
            display: block;
            margin-bottom: 0px;
            font-size: 0.7em;
            padding: 0;
        }

        /* Bildname-Box */
        .bildname-box {
            display: flex;
            justify-content: center;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px;
            margin-top: 10px;
            background: #f5f5f5;
            font-size: 0.7em;
        }

        /* Bildname-Text */
        .bildname {
            color: #555;
            text-align: center;
            margin-top: 8px;
            font-size: 0.7em;
        }

        /* Bildbeschreibung/Text */
        .text {
            margin-top: 10px;
            font-size: 0.9em;
            color: #333;
            white-space: pre-wrap;
        }

        /* Sticky Navigation oben */
        .sticky-nav {
            position: sticky;
            top: 0;
            background: #fff;
            padding: 8px 20px;
            border-bottom: 1px solid #ddd;
            text-align: center;
            font-size: 1.1em;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
            z-index: 1000;
            max-width: 100%; /* Begrenze die maximale Breite */
        }

        /* Links und Texte in der Navigation */
        .sticky-nav a,
        .sticky-nav span {
            text-decoration: none;
            color: #333;
            font-weight: bold;
        }

        /* Hover-Effekt Navigation */
        .sticky-nav a:hover {
            color: #007bff;
        }

        .quality-good {
            color: green;
            font-weight: bold;
            text-align: left;
            margin-top: 8px;
            margin-right: 30px;
            font-size: 0.7em;
        }

        .quality-medium {
            color: orange;
            text-align: left;
            margin-top: 8px;
            margin-right: 30px;
            font-size: 0.7em;
        }

        .quality-bad {
            color: red;
            text-align: left;
            margin-top: 8px;
            margin-right: 30px;
            font-size: 0.7em;
        }

        .quality-unknown {
            color: gray;
            font-style: italic;
            text-align: left;
            margin-top: 8px;
            margin-right: 30px;
            font-size: 0.7em;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.7);
        }

        .modal-inhalt {
            position: relative;
            margin: 5% auto;
            padding: 0;
            width: 80%;
            max-width: 900px;
            background-color: #fff;
        }

        .schliessen {
            position: absolute;
            top: 10px;
            right: 65px;
            color: #000;
            font-size: 35px;
            font-weight: bold;
            cursor: pointer;
        }

        #menu {
            display: none;
            margin-top: 10px;
            background: white;
            box-shadow: 0 0 5px #ccc;
            border-radius: 10px;
            padding: 10px;
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        #meinIframe {
            width: 100%;
            height: 600px;
            border: none;
            display: block;
        }
    </style>
</head>
<body>
<div
        id="hamburger"
        style="position: fixed; top: 40px; left: 20px; z-index: 1000"
>
    <button
            onclick="toggleMenu()"
            style="padding: 8px 12px; font-size: 0.8em"
    >
        ‚ò∞
    </button>
    <div id="menu">
        <hr style="margin: 10px 0"/>
        <div style="display: flex; align-items: center; gap: 6px">
            <input
                    id="gotoPageInput"
                    max="{{ total_pages }}"
                    min="1"
                    placeholder="Seite..."
                    style="width: 60px; padding: 4px"
                    type="number"
            />
            <button onclick="gotoPage()">Gehe zu Seite</button>
        </div>
        <hr style="margin: 10px 0"/>
        <div style="display: flex; flex-direction: column; gap: 6px;">
            {% for k in kategorien %}
                <div style="display: flex; gap: 6px;">
                    <button onclick="moveToFolder({{ kategorien }}, '{{ k.key }}')"
                            style="padding: 6px 10px; border-radius: 5px; width: 180px;">
                        {{ k.icon }} {{ k.label }} (<span id="count-{{ k.key }}">?</span>)
                    </button>
                    <button
                            onclick="navigateToFolder({{ kategorien }}, '{{ k.key }}', {{ count }})"
                            style="padding: 6px 10px; border-radius: 5px; width: 40px; {{ 'background: #eef;' if current_folder == k.key else '' }}">
                        üìÇ
                    </button>
                </div>
            {% endfor %}
        </div>
    </div>
</div>
<div class="sticky-nav">
    {% if page > 1 %}
        <a
                href="#"
                onclick="saveAndGo({{ kategorien }}, 1, {{ count }}, '{{ current_folder }}')"
        >‚èÆ Anfang</a
        >
        <a
                href="#"
                onclick="saveAndGo({{ kategorien }}, {{ page - 1 }}, {{ count }}, '{{ current_folder }}')"
        >‚¨Ö Zur√ºck</a
        >
    {% else %}
        <span style="color: #ccc">‚èÆ Anfang</span>
        <span style="color: #ccc">‚¨Ö Zur√ºck</span>
    {% endif %}
    <div style="display: flex; gap: 4px; margin-bottom: 4px; align-items: center;">
        <button style="padding: 4px 8px; font-size: 12px;" onclick="saveAndGo({{ kategorien }}, {{ page }}, {{ (count // 2) if count > 1 else 1 }}, '{{ current_folder }}')">
            ‚ûñ‚ûñ
        </button>
        <button style="padding: 4px 8px; font-size: 12px;" onclick="saveAndGo({{ kategorien }}, {{ page }}, {{ count * 2 }}, '{{ current_folder }}')">
            ‚ûï‚ûï
        </button>
    </div>    <a
            href="#"
            onclick="saveAndGo({{ kategorien }}, {{ page }}, {{ count }}, '{{ current_folder }}')"
    >Seite {{ page }} von {{ total_pages }}</a
    >
    {% if page < total_pages %}
        <a
                href="#"
                onclick="saveAndGo({{ kategorien }}, {{ page + 1 }}, {{ count }}, '{{ current_folder }}')"
        >Weiter ‚û°</a
        >
        <a
                href="#"
                onclick="saveAndGo({{ kategorien }}, {{ total_pages }}, {{ count }}, '{{ current_folder }}')"
        >‚è≠ Ende</a
        >
    {% else %}
        <span style="color: #ccc">Weiter ‚û°</span>
        <span style="color: #ccc">‚è≠ Ende</span>
    {% endif %}
</div>
<div class="grid">{{ images_html | safe }}</div>
<!-- MODAL-Container -->
<div class="modal" id="meinModal">
    <div class="modal-inhalt">
        <span class="schliessen" onclick="closeModal()">&times;</span>
        <iframe id="meinIframe"></iframe>
    </div>
</div>

<script>
    function openIframe(url) {
        var iframe = document.getElementById("meinIframe");
        iframe.src = url;
        iframe.style.display = "block";
    }

    function openModal(url) {
        var modal = document.getElementById("meinModal");
        var iframe = document.getElementById("meinIframe");
        iframe.src = "https://drive.google.com/file/d/" + url + "/preview";
        modal.style.display = "block";
    }

    function closeModal() {
        var modal = document.getElementById("meinModal");
        var iframe = document.getElementById("meinIframe");
        iframe.src = "";
        modal.style.display = "none";
    }

    window.onclick = function (event) {
        var modal = document.getElementById("meinModal");
        if (event.target == modal) {
            closeModal();
        }
    };

    function saveAndGo(kategorien, targetPage, count, folder) {
        const data = Array.from(document.querySelectorAll("form")).map(
            (form) => {
                const entry = {};
                // Extrahiere image_name aus dem Formular
                entry.image_name = form.querySelector('[name="image_name"]').value;

                // Gehe durch alle Kategorien und speichere die Checkbox-Werte
                kategorien.forEach((cat) => {
                    // Name der Checkbox angepasst an das Format img_5242.jpg_<key>
                    const box = form.querySelector(
                        `[name="${entry.image_name}_${cat.key}"]`
                    );
                    entry[cat.key] = box && box.checked ? "on" : ""; // 'on' wenn angekreuzt, sonst leer
                });

                // Notiz extrahieren
                entry.notiz = form.querySelector('[name="notiz"]')?.value || "";
                return entry;
            }
        );

        // Sende die Daten an den Server
        Promise.all(
            data.map((entry) =>
                fetch("/gallery/save", {
                    method: "POST",
                    headers: {"Content-Type": "application/x-www-form-urlencoded"},
                    body: new URLSearchParams(entry),
                })
            )
        )
            .then(() => {
                const url = new URL(window.location.href);
                url.searchParams.set("page", targetPage);
                url.searchParams.set("count", count);
                url.searchParams.set("folder", folder);
                window.location.href = url.toString();
            })
            .catch((err) => {
                alert("Fehler beim Speichern!");
                console.error(err);
            });
    }

    const kategorien = {{ kategorien | tojson }}
    ;

    window.addEventListener("DOMContentLoaded", () => {
        const menu = document.getElementById("menu");
        const saved = localStorage.getItem("menuOpen");
        menu.style.display = saved === "true" ? "block" : "none";

        kategorien.forEach((cat) => {
            fetch(`/gallery/verarbeite/check/${cat.key}`)
                .then((res) => res.json())
                .then((data) => {
                    const elem = document.getElementById(`count-${cat.key}`);
                    if (elem) elem.textContent = data.count;
                });
        });
    });

    function toggleMenu() {
        const menu = document.getElementById("menu");
        const visible = menu.style.display === "block";
        menu.style.display = visible ? "none" : "block";
        localStorage.setItem("menuOpen", !visible);
    }

    function navigateToFolder(kategorien, cat, count) {
        // Men√º ausblenden
        const menu = document.getElementById("menu");
        menu.style.display = "none";
        localStorage.setItem("menuOpen", false);

        // URL neu setzen
        const url = new URL(window.location.href);

        // Werte setzen (page und count hier neu festlegen!)
        url.searchParams.set("page", 1); // beim Ordnerwechsel immer auf Seite 1
        url.searchParams.set("count", count); // kannst du ggf. anpassen
        url.searchParams.set("folder", cat); // der neue Folder

        window.location.href = url.toString(); // Seite neu laden
    }

    function moveToFolder(kategorien, cat) {
        const labelMap = Object.fromEntries(
            kategorien.map((k) => [k.key, k.label])
        );

        fetch(`/gallery/moveToFolder/${cat}`)
            .then((res) => res.json())
            .then((data) => {
                const count = data.count;

                if (count === 0) {
                    alert(`Keine Bilder zum ${labelMap[cat]} vorhanden.`);
                    return;
                }

                const ok = confirm(
                    `${count} Bild(er) w√ºrden nach '${labelMap[cat]}' verschoben. Fortfahren?`
                );

                if (ok) {
                    fetch(`/gallery/moveToFolder/${cat}`, {method: "POST"}).then(
                        () => {
                            // Hinweis statt sofortem Redirect
                            const infoDiv = document.createElement("div");
                            infoDiv.innerText = `‚úÖ Erfolgreich ${count} Bild(er) nach '${labelMap[cat]}' verschoben.`;
                            infoDiv.style.position = "fixed";
                            infoDiv.style.top = "10px";
                            infoDiv.style.right = "10px";
                            infoDiv.style.padding = "10px 20px";
                            infoDiv.style.background = "#4caf50";
                            infoDiv.style.color = "white";
                            infoDiv.style.borderRadius = "8px";
                            infoDiv.style.zIndex = 1000;
                            document.body.appendChild(infoDiv);

                            setTimeout(() => {
                                infoDiv.remove();
                                // Dann sch√∂n umleiten mit aktuellen URL-Parametern
                                const params = new URLSearchParams(window.location.search);
                                params.set("done", cat);
                                location.href = `/?${params.toString()}`;
                            }, 2500); // 2,5 Sekunden sp√§ter
                        }
                    );
                }
            });
    }
</script>
</body>
</html>
